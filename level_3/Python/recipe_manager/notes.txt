Recipe data structure Class VS Dictionary
Class structure would allow for better encapsulation as all functionality relating to a recipe would be contained
within the class. With a Dictionary structure there would have to be a separate recipe utils file that contains all the
functionality.
With Dictionaries it would have been easier to implement file I/O operations with JSON

Recipe details data types
Ingredients - String vs Array vs List
Instructions - String vs Array vs List

Editing recipe ingredients
Ask "Yes" or "No" after every edit if the user wishes to continue editing ingredients - can be annoying if editing
multiple ingredients but makes more sense from an end user standpoint
OR
Require the user to enter "0" after they are done with their edits - not annoying when editing multiple ingredients but
can feel a bit odd from an end user standpoint

File I/O
CSV vs JSON -

Editing / Deleting recipes option place - At main menu level OR At recipe details level
It would be more obvious to the user if the edit and delete recipe options were present at the main menu. If they were
at the recipe details level the user would have to go through several other menus and as such these functionalities may
seem hidden or hard to find.
If the edit and delete options were at the recipe details level the user would have an easier time deciding what to do
as the details of the recipe would be right there as opposed to having to navigate several other menus to get to them.


Assumptions made:
The user will not intentionally alter the contents of the text file storing the recipe list in an attempt to break the
application


Ideas:
Adding ingredients / instructions before or after certain elements already in that list. - While this would be a good
quality of life change I feel like it would not add much to the project and the current editing functionality fulfils
the requirement of the project spec.

Confirmation required when deleting recipes
Good quality of life but I feel like I am starting to go out of scope of the project with this.

Putting input validations into their own functions
Turns out this doesn't actually shorten the code almost at all, also I don't want to go through all that testing again
if I were to make their own functions and have to replace the existing validations. Would be a good addition if I have
the time to spare as it is better code quality to make reused code into functions.


Challenges faced:
Reading data from file and transforming it into code
Checking if a substring is within the recipe ingredients list of each recipe within a Recipe object list